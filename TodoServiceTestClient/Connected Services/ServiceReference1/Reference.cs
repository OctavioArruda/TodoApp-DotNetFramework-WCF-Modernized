//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TodoServiceTestClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITodoService")]
    public interface ITodoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetTodoItem", ReplyAction="http://tempuri.org/ITodoService/GetTodoItemResponse")]
        TodoServiceLibrary.TodoItem GetTodoItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetTodoItem", ReplyAction="http://tempuri.org/ITodoService/GetTodoItemResponse")]
        System.Threading.Tasks.Task<TodoServiceLibrary.TodoItem> GetTodoItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetAllTodoItems", ReplyAction="http://tempuri.org/ITodoService/GetAllTodoItemsResponse")]
        TodoServiceLibrary.TodoItem[] GetAllTodoItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetAllTodoItems", ReplyAction="http://tempuri.org/ITodoService/GetAllTodoItemsResponse")]
        System.Threading.Tasks.Task<TodoServiceLibrary.TodoItem[]> GetAllTodoItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddTodoItem", ReplyAction="http://tempuri.org/ITodoService/AddTodoItemResponse")]
        void AddTodoItem(TodoServiceLibrary.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddTodoItem", ReplyAction="http://tempuri.org/ITodoService/AddTodoItemResponse")]
        System.Threading.Tasks.Task AddTodoItemAsync(TodoServiceLibrary.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/UpdateTodoItem", ReplyAction="http://tempuri.org/ITodoService/UpdateTodoItemResponse")]
        void UpdateTodoItem(TodoServiceLibrary.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/UpdateTodoItem", ReplyAction="http://tempuri.org/ITodoService/UpdateTodoItemResponse")]
        System.Threading.Tasks.Task UpdateTodoItemAsync(TodoServiceLibrary.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITodoService/DeleteTodoItemResponse")]
        void DeleteTodoItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITodoService/DeleteTodoItemResponse")]
        System.Threading.Tasks.Task DeleteTodoItemAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoServiceChannel : TodoServiceTestClient.ServiceReference1.ITodoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoServiceClient : System.ServiceModel.ClientBase<TodoServiceTestClient.ServiceReference1.ITodoService>, TodoServiceTestClient.ServiceReference1.ITodoService {
        
        public TodoServiceClient() {
        }
        
        public TodoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TodoServiceLibrary.TodoItem GetTodoItem(int id) {
            return base.Channel.GetTodoItem(id);
        }
        
        public System.Threading.Tasks.Task<TodoServiceLibrary.TodoItem> GetTodoItemAsync(int id) {
            return base.Channel.GetTodoItemAsync(id);
        }
        
        public TodoServiceLibrary.TodoItem[] GetAllTodoItems() {
            return base.Channel.GetAllTodoItems();
        }
        
        public System.Threading.Tasks.Task<TodoServiceLibrary.TodoItem[]> GetAllTodoItemsAsync() {
            return base.Channel.GetAllTodoItemsAsync();
        }
        
        public void AddTodoItem(TodoServiceLibrary.TodoItem item) {
            base.Channel.AddTodoItem(item);
        }
        
        public System.Threading.Tasks.Task AddTodoItemAsync(TodoServiceLibrary.TodoItem item) {
            return base.Channel.AddTodoItemAsync(item);
        }
        
        public void UpdateTodoItem(TodoServiceLibrary.TodoItem item) {
            base.Channel.UpdateTodoItem(item);
        }
        
        public System.Threading.Tasks.Task UpdateTodoItemAsync(TodoServiceLibrary.TodoItem item) {
            return base.Channel.UpdateTodoItemAsync(item);
        }
        
        public void DeleteTodoItem(int id) {
            base.Channel.DeleteTodoItem(id);
        }
        
        public System.Threading.Tasks.Task DeleteTodoItemAsync(int id) {
            return base.Channel.DeleteTodoItemAsync(id);
        }
    }
}
